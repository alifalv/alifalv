<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Advice">
    <resultMap id="BaseResultMap" type="Advice" >
        <id column="adviceId" property="adviceId" jdbcType="INTEGER" />
        <result column="userId" property="userId" jdbcType="INTEGER" />
        <result column="userName" property="userName" jdbcType="VARCHAR" />
        <result column="caseType" property="caseType" jdbcType="INTEGER" />
        <result column="reward" property="reward" jdbcType="DECIMAL" />
        <result column="sendTime" property="sendTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="readNum" property="readNum" jdbcType="INTEGER" />
        <result column="replyNumber" property="replyNumber" jdbcType="INTEGER" />
        <result column="adviceContent" property="adviceContent" jdbcType="VARCHAR" />
        <result column="userImg" property="userImg" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPageList" parameterType="map" resultMap="BaseResultMap">
        SELECT au.*,am.replyNumber 
        FROM ali_advice au left join (SELECT adviceId,COUNT(DISTINCT userId) as replyNumber from ali_advice_reply GROUP BY adviceId) am on au.adviceId=am.adviceId
        <where>
            <if test="true">
                and (is_delete != 1 or is_delete is null )
            </if>
            <if test="caseType != null and caseType != 0">
                and caseType = #{caseType,jdbcType=INTEGER}
            </if>
            <if test="sendTimeStart != null and sendTimeStart != ''">
                and sendTime &gt;= #{sendTimeStart}
            </if>
            <if test="sendTimeEnd != null and sendTimeEnd != ''">
                and sendTime &lt; #{sendTimeEnd}
            </if>
            <if test="content != null and content != ''">
                and (userName like '%${content}%' or title like '%${content}%')
            </if>
        </where>
        ORDER BY adviceId DESC 
        limit #{PAGE_START},#{PAGE_LENGTH}
    </select>
    <select id="selectPageList_COUNT_TOTAL" parameterType="map" resultType="int">
        SELECT
          count(adviceId)
        FROM
        ali_advice
        <where>
            <if test="true">
                and (is_delete != 1 or is_delete is null )
            </if>
            <if test="caseType != null and caseType != 0">
                and caseType = #{caseType,jdbcType=INTEGER}
            </if>
            <if test="sendTimeStart != null and sendTimeStart != ''">
                and sendTime &gt;= #{sendTimeStart}
            </if>
            <if test="sendTimeEnd != null and sendTimeEnd != ''">
                and sendTime &lt; #{sendTimeEnd}
            </if>
            <if test="content != null and content != ''">
                and (userName like '%${content}%' or title like '%${content}%')
            </if>
        </where>
    </select>
    <select id="queryInfo" parameterType="Advice" resultMap="BaseResultMap">
        select * from ali_advice
        <where>
            <if test="adviceId != null">
                and adviceId = #{adviceId,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <update id="update" parameterType="Advice" >
        update ali_advice
        <set >
            <if test="userId != null" >
                userId = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null" >
                userName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="caseType != null" >
                caseType = #{caseType,jdbcType=INTEGER},
            </if>
            <if test="reward != null" >
                reward = #{reward,jdbcType=DECIMAL},
            </if>
            <if test="sendTime != null" >
                sendTime = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="userImg != null" >
                userImg = #{userImg,jdbcType=VARCHAR},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null" >
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
        </set>
        where adviceId = #{adviceId,jdbcType=INTEGER}
    </update>
    <select id="numbersOfAdvice" resultType="Integer">
        select count(adviceId) from ali_advice where is_delete != 1 or is_delete is null;
    </select>
    <select id="numbersOfAdviceType" resultType="map">
        select caseType,count(adviceId) as caseTypeNum from ali_advice where is_delete != 1 or is_delete is null GROUP BY caseType;
    </select>
	
	<!-- 咨询师回复咨询问题统计 -->
	<select id="numbersOfCounselorsReply" parameterType="map" resultType="map">
		select x.userId,x.realName,x.replynum,ifnull(y.replyPrice,0) as replyPrice from 
		(select b.userId,d.realName,count(a.detailsId) as replynum 
			from ali_advice_details a,ali_advice_reply b, ali_advice c,ali_counselor d 
			where a.replyId=b.replyId and b.adviceId=c.adviceId and b.userId=d.userId and b.rankValue>0 and 
				(a.replyTime between #{startTime} and #{endTime}) 
		  		<if test="content != null and content !=''">
				and (b.userId like '%${content}%' or d.realName like '%${content}%') 
		  		</if>
			group by b.userId,d.realName) x
		left join (select favoreeUserId,realName,sum(orderPrice) as replyPrice 
			from ali_business_order m,ali_counselor n 
			where m.favoreeUserId=n.userId and businessType='咨询回复' and 
				(m.endTime between #{startTime} and #{endTime}) 
		  		<if test="content != null and content !=''">
				and (n.userId like '%${content}%' or n.realName like '%${content}%') 
		  		</if>
			group by favoreeUserId,realName) y 
		on x.userId=y.favoreeUserId
        ORDER BY userId 
        limit #{PAGE_START},#{PAGE_LENGTH};
	</select>
	<select id="numbersOfCounselorsReply_COUNT_TOTAL" parameterType="map" resultType="int">
		select count(x.userId) from
		(select b.userId,d.realName,count(a.detailsId) as replynum 
			from ali_advice_details a,ali_advice_reply b, ali_advice c,ali_counselor d 
			where a.replyId=b.replyId and b.adviceId=c.adviceId and b.userId=d.userId and b.rankValue>0 and 
				(a.replyTime between #{startTime} and #{endTime}) 
		  		<if test="content != null and content !=''">
				and (b.userId like '%${content}%' or d.realName like '%${content}%') 
		  		</if>
			group by b.userId,d.realName) x
	</select>
	
	<!-- 咨询师回复咨询问题统计 详情 -->
	<select id="detailsOfCounselorsReply" parameterType="map" resultType="map">
		select x.*,ifnull(y.orderPrice,0) as orderPrice from
		(select a.replyId,a.replyContent,a.replyTime,b.userId,d.realName,c.adviceId,ifnull(c.userName,'') as userName,c.title,c.caseType,c.reward,c.sendTime 
			from ali_advice_details a,ali_advice_reply b, ali_advice c,ali_counselor d 
			where a.replyId=b.replyId and b.adviceId=c.adviceId and b.userId=d.userId and b.rankValue>0 and 
				(a.replyTime between #{startTime} and #{endTime}) and b.userId=#{userId}) x
		left join ali_business_order y on x.adviceId=y.connectionId and x.userId=y.favoreeUserId and y.businessType='咨询回复' and y.sourceType='法律咨询'
        ORDER BY replyId DESC limit #{PAGE_START},#{PAGE_LENGTH};
	</select>
	<select id="detailsOfCounselorsReply_COUNT_TOTAL" parameterType="map" resultType="int">
		select count(a.replyId)
		from ali_advice_details a,ali_advice_reply b, ali_advice c,ali_counselor d 
		where a.replyId=b.replyId and b.adviceId=c.adviceId and b.userId=d.userId and b.rankValue>0 and 
			(a.replyTime between #{startTime} and #{endTime}) and b.userId=#{userId}
	</select>
</mapper>